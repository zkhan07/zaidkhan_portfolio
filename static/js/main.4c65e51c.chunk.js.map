{"version":3,"sources":["logo.svg","Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Page","style","backgroundColor","className","App","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,wKCsI5BC,G,MAnIF,WACT,OACI,yBAAKC,MAAO,CAAEC,gBAAiB,SAK3B,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,cACX,6BAAK,6BACL,wCACA,yBAAKA,UAAU,eACf,4FACA,2KACA,iPANJ,IAM8N,6BAC1N,kFACA,4BACI,4DADJ,IAC0C,6BACtC,iFAFJ,IAE+D,6BAC3D,qDAHJ,IAGmC,6BAC/B,mDAJJ,IAIiC,6BAC7B,iDALJ,IAK+B,6BAC3B,2DANJ,IAMyC,6BACrC,8EAPJ,IAO4D,gCAOpE,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAf,OAAgC,6BAAK,6BACjC,4BAAI,uBAAGA,UAAU,eAAjB,6BACA,yBAAKA,UAAU,eACf,6NACA,uFACA,kFACA,4BACI,2JADJ,IACyI,6BACrI,iTAFJ,IAE+R,6BAC3R,4DAHJ,IAG0C,6BACtC,8PAJJ,IAI4O,8BAE5O,6BAAK,6BAEL,yBAAKA,UAAU,yDACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,kBACX,kCACA,uFAGR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,kBACX,kCACA,4FAGR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,kBACX,kCACA,mFAGR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,kBACX,mCACA,0FAKZ,6BAAK,6BAzCT,IAyCe,6BAAK,+BAQxB,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAf,OAAgC,6BAAK,6BACjC,4BAAI,uBAAGA,UAAU,aAAjB,4BACA,yBAAKA,UAAU,eACf,2JACA,wXACA,uKALJ,IAKoJ,6BAChJ,sEACA,4BACI,4EADJ,IAC0D,6BACtD,iFAFJ,IAE+D,6BAC3D,qDAHJ,IAGmC,6BAC/B,mDAJJ,IAIiC,6BAC7B,iDALJ,IAK+B,6BAC3B,2DANJ,IAMyC,6BACrC,8EAPJ,IAO4D,gCAQtE,yBAAKA,UAAU,gBACT,yBAAKA,UAAU,cAAf,OAAgC,6BAAK,6BACjC,4BAAI,uBAAGA,UAAU,eAAjB,2CAA0E,6BAA1E,kCACA,yBAAKA,UAAU,eACf,4FACA,mMACA,4BACI,uFADJ,IACqE,6BACjE,iFAFJ,IAE+D,6BAC3D,qDAHJ,IAGmC,6BAC/B,mDAJJ,IAIiC,6BAC7B,iDALJ,IAK+B,6BAC3B,2DANJ,IAMyC,6BACrC,8EAPJ,IAO4D,8BAG5D,yBAAKA,UAAU,eACf,mPAhBJ,IAgB2N,6BACvN,gLAjBJ,IAiBwJ,kCC/FzJC,MAxBf,WACE,OACE,yBAAKD,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKE,IAAKC,IAAMH,UAAU,WAAWI,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEJ,UAAU,WACVK,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,gBAUF,kBAAC,EAAD,QCXcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4c65e51c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\n\r\nconst Page = () => {\r\n    return(\r\n        <div style={{ backgroundColor: \"#fff\"}}>\r\n\r\n        \r\n            \r\n            {/* Page1 */}\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment\">\r\n                    <br/><br/>      \r\n                    <h1>MY OFFER</h1>\r\n                    <div className=\"ui divider\"></div>\r\n                    <h4>A full-stack web developer with over 14 years of experience.</h4>\r\n                    <p>I have maintained, developed and launched multiple projects from scratch, carrying the development of its' back-end and front-end codebases.</p> \r\n                    <p>My current toolset includes Elixir Language & Phoenix Framework, Ruby & Ruby on Rails, React, Redux, Angular, TypeScript, Docker and all the other various frameworks, libraries and technologies related to them.</p> <br/>\r\n                    <h4>I can help you with all the sides of your project:</h4>\r\n                    <ul>\r\n                        <li>verifying good UI/UX design,</li> <br/>\r\n                        <li>leading/co-developing the back-end and front-end,</li> <br/>\r\n                        <li>setting up the CI/CD,</li> <br/>\r\n                        <li>mentoring the team,</li> <br/>\r\n                        <li>estimating tasks,</li> <br/>\r\n                        <li>researching possible techs,</li> <br/>\r\n                        <li>leading, launching and monitoring the project.</li> <br/>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n         \r\n            {/* Page2 */}\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment\">    <br/><br/>\r\n                    <h2><i className=\"paste icon\"></i>FRONT-END WEB DEVELOPMENT</h2>\r\n                    <div className=\"ui divider\"></div>\r\n                    <h4>I specialise in applications written in both React and Angular. Recently I became also a huge fan of one-way data flow and Redux-like architecture and also typed languages, e.g. TypeScript.</h4>\r\n                    <h4>My current experience and skills in front-end includes:</h4>\r\n                    <h4>I can help you with all the sides of your project:</h4>\r\n                    <ul>\r\n                        <li>lead a TypeScript/JavaScript development: bootstraping, refactoring, and improving the structure, reliability, build setup;</li> <br/>\r\n                        <li>full integration of front-end development using tools like Webpack with features like automatic code reload, code minifications, multiple environments support, CI/CD, Storybook components library, automated testing of accessibility, server-side render and visual snapshots,</li> <br/>\r\n                        <li>good sense of design and UX,</li> <br/>\r\n                        <li>huge experience in almost all of the JS ecosystems, by having used in the past many libraries like Next.js, React, Redux, Redux-Observable, RxJS, Angular, Ionic Framework, Backbone, jQuery, Lodash/Underscore and many else.</li> <br/>\r\n                    </ul>\r\n                    <br/><br/>\r\n\r\n                    <div className=\"doubling stackable ui four column grid center aligned\">\r\n                        <div className=\"column\">\r\n                            <div className=\"ui red segment\">\r\n                                <h1>14</h1>\r\n                                <h3>single page applications launched in Angular or React</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"ui red segment\">\r\n                                <h1>09</h1>\r\n                                <h3>talks given about front-end development of the environment</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"ui red segment\">\r\n                                <h1>24</h1>\r\n                                <h3>co-founded ng-poznan, Poznan Angular meetup group</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"ui red segment\">\r\n                                <h1>105</h1>\r\n                                <h3>talks given about front-end development for the project</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br/><br/> <br/><br/>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n              {/* Page3 */}\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment\">    <br/><br/>\r\n                    <h2><i className=\"tag icon\"></i>BACK-END WEB DEVELOPMENT</h2>\r\n                    <div className=\"ui divider\"></div>\r\n                    <h4>In back-end development, my current stack involves Elixir and Phoenix Framework, and alternatively Ruby on Rails or NodeJS.</h4>\r\n                    <p>Nearly every app I have launched in the past had the back-end done also by me. In order to improve the development speed, performance and reliability, I have changed languages and frameworks already multiple times, from PHP to Ruby and now to Elixir; and configured servers using just the shell, then Chef/Ansible, and now Docker and Kubernetes.</p> \r\n                    <p>The lessons I learned while doing all these apps will be useful for me forever, no matter what framework I will use in the next project.</p> <br/>\r\n                    <h4>What I can do for you at that side is:</h4>\r\n                    <ul>\r\n                        <li>lead development of backends in Elixir/Ruby,</li> <br/>\r\n                        <li>leading/co-developing the back-end and front-end,</li> <br/>\r\n                        <li>setting up the CI/CD,</li> <br/>\r\n                        <li>mentoring the team,</li> <br/>\r\n                        <li>estimating tasks,</li> <br/>\r\n                        <li>researching possible techs,</li> <br/>\r\n                        <li>leading, launching and monitoring the project.</li> <br/>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n          {/* Page4 */}\r\n          <div className=\"ui container\">\r\n                <div className=\"ui segment\">    <br/><br/>\r\n                    <h2><i className=\"paste icon\"></i>WHAT ABOUT DEV-OPS, DESIGN, UI, PROJECT <br/> LEADERSHIP, TEAM MENTORSHIP ?</h2>\r\n                    <div className=\"ui divider\"></div>\r\n                    <h4>During my time I have created and released tens of websites.</h4>\r\n                    <h4>Thus, not only I have coded their back-end and front-end codebases, but often I also had to care about other things needed in a successful web application project:</h4>\r\n                    <ul>\r\n                        <li>good planning of UI and thinking how it affects the UX;</li> <br/>\r\n                        <li>leading/co-developing the back-end and front-end,</li> <br/>\r\n                        <li>setting up the CI/CD,</li> <br/>\r\n                        <li>mentoring the team,</li> <br/>\r\n                        <li>estimating tasks,</li> <br/>\r\n                        <li>researching possible techs,</li> <br/>\r\n                        <li>leading, launching and monitoring the project.</li> <br/>\r\n                    </ul>\r\n\r\n                    <div className=\"ui divider\"></div>\r\n                    <p>If your initial thought is that I can’t be the best in everything, it's okay. Send the design job to someone else, and I will take care of all the code development, or whatever other role you see me best in.</p> <br/>\r\n                    <p>In cases when you already have an existing team, but you would still use some help, contact me as well. I’ll fit in very quickly, I promise.</p> <br/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Page from \"./Page\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <Page />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}